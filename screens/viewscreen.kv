#:import KivyLexer kivy.extras.highlight.KivyLexer

<ViewScreen>:
	label_id: Dropdown.__self__
	tabarea: tabarea

	# Editor Toolbar
	BoxLayout:

		# Tab drawing area
		TabArea:
			id: tabarea

		# Dropdown menu
		Button:
			text: 'Tools'
			size_hint: (.12, .10)
			center_x: root.center_x
			on_release: Dropdown.open(self)
		DropDown:
			id: Dropdown
			on_parent: self.dismiss()
			Button:
				text: 'Play'
				height: 45
				size_hint: (None, None)
			Button:
				text: 'Pause'
				height: 45
				size_hint: (None, None)
			Button:
				text: 'Help'
				height: 45
				size_hint: (None, None)

<TabArea>
	tabCanvas: tabCanvas
	slide: slide

	BoxLayout:
		orientation: 'vertical'
		ScrollView:
			bar_width: 0
			do_scroll_y: False
			Widget:
				id: tabCanvas
				size_hint_x: 5
		Slider:
			id: slide
			min: 0
			max: 1
			value: 25
			orientation: 'horizontal'
			step: 0.01
			size_hint: (1, .3)
			#value: scroll_change
			#on_scroll_x: slider_change()

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            path: app.curDirectory
            filters: ['*.txt']#filters so only .txt files appear.
        BoxLayout:
            size_hint_y: .15

            Button:
				#size_hint: (.5,.20)
                text: "Cancel"
                on_release: root.cancel()
            Button:
				#size_hint: (.5,.2)
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size*.75
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 100
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 100
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)
