#:import KivyLexer kivy.extras.highlight.KivyLexer

<ViewScreen>:
	#label_id: Dropdown.__self__
	tabarea: tabarea

	# Editor Toolbar
	BoxLayout:
		size: self.parent.size
		orientation: 'vertical'
		# Tab drawing area
		TabArea:
			id: tabarea
		#Widget
		#Widget
		#Slider
			#id: Volume
			#size_hint: (1, .15)
			#pos_hint: {bottom + '100': .70}
			#value: 50
			#range: (0,100)
			#step: 5
			#volume: Volume.setter(self)
		ActionBar:
			app_icon: 'hammer.jpg'
			pos_hint: {'bottom':1}
			ActionView:
				use_separator: True
				ActionPrevious:
					title: 'Editor Toolbar'
					with_previous: False
				ActionOverflow:
				ActionButton:
					text: 'Btn0'
					#icon: 'atlas://data/images/defaulttheme/audio-volume-high' if Volume.value > 65 else 'atlas://data/images/defaulttheme/audio-volume-medium' if 25 < Volume.value < 70 else 'atlas://data/images/defaulttheme/audio-volume-low' if 0 < Volume.value < 30 else 'atlas://data/images/defaulttheme/audio-volume-muted'
				ActionButton:
					text: 'Hammer On'
				ActionButton:
					text: 'Slide Off'
				ActionButton:
					text: "Thor"
					icon: 'Assets/images/hammer.jpg'
				ActionButton:
					text: 'Btn4'
				ActionButton
					#text: '%s' % int(Volume.value)
				ActionButton
					icon: 'Assets/images/hammer.jpg'


<TabArea>
	tabCanvas: tabCanvas
	slide: slide

	BoxLayout:
		orientation: 'vertical'
		ScrollView:
			bar_width: 0
			do_scroll_y: False
			Widget:
				id: tabCanvas
				size_hint_x: 5
		Slider:
			id: slide
			min: 0
			max: 1
			value: 25
			orientation: 'horizontal'
			step: 0.01
			size_hint: (1, .10)
			#value: scroll_change
			#on_scroll_x: slider_change()

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            path: app.curDirectory
            filters: ['*.txt']#filters so only .txt files appear.
        BoxLayout:
            size_hint_y: .15

            Button:
				#size_hint: (.5,.20)
                text: "Cancel"
                on_release: root.cancel()
            Button:
				#size_hint: (.5,.2)
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size*.75
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 100
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 100
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)
