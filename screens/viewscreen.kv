#:import KivyLexer kivy.extras.highlight.KivyLexer

<ViewScreen>:
	canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "Assets/images/FlatDesign/DarkBackground.png"

	#text_input: text_input
	tabarea: tabarea
	volSlider: s1
	bpsSlider: bpsSlider
	BoxLayout:
		size: self.parent.size
		orientation: 'vertical'
		spacing: 200
		#control Menu
		StackLayout:
			#Control Menu Decided to make it a seperate menu from the nav menu
		    #orientation: 'horizontal'
			size_hint_y: None
			y: root.height - 80
			#spacing: 100

			Button:
				size_hint_x: .04
				text: 'Save'
				on_press: root.show_save()
			ToggleButton:
				id: playbtn
				size_hint_x: .03
				#size_hint_y: .10
				#text: 'play/pause'
				background_normal: 'Assets/images/play2.png'
				background_down: 'Assets/images/pause2.png'
				on_press: root.play_pause(*args)
			Label:
				size_hint_x: .15
				text: 'Beats per Minute (BPM) %s' % int(bpsSlider.value)
			Slider:
				size_hint_x: .25
            	id: bpsSlider
            	value: 60
            	range: (0,300)
            	step: 10
			CheckBox:
				id: 'soundPlay'
				group: 'soundPlay'
				size_hint_x: .03
	            on_active: root.on_checkbox_active(self, *args)
	        Label:
	        	size_hint_x: .15
				text: 'AutoScroll'
	        CheckBox:
	        	id: 'autoScroll'
	        	group: 'autoScroll'
	        	size_hint_x: .03
	            on_active: root.on_checkbox_active(self, *args)

			Image:
				pos: self.parent.pos
				size_hint_x: .05
				BoxLayout:
					#size: self.parent.size
					pos: self.parent.pos
					Image:
						pos: self.parent.pos
						#size_hint_x: .001
						source: 'atlas://data/images/defaulttheme/audio-volume-high' if s1.value > .65 else 'atlas://data/images/defaulttheme/audio-volume-medium' if .25 < s1.value < .70 else 'atlas://data/images/defaulttheme/audio-volume-low' if 0 < s1.value < .30 else 'atlas://data/images/defaulttheme/audio-volume-muted'
						#text: 'Slider value is %s' % int(s1.value) if s1.value else 'Slider not set'
						#background_normal: 'atlas://data/images/defaulttheme/audio-volume-high' if s1.value > .65 else 'atlas://data/images/defaulttheme/audio-volume-medium' if .25 < s1.value < .70 else 'atlas://data/images/defaulttheme/audio-volume-low' if 0 < s1.value < .30 else 'atlas://data/images/defaulttheme/audio-volume-muted'
						#background_down: 'atlas://data/images/defaulttheme/audio-volume-high' if s1.value > .65 else 'atlas://data/images/defaulttheme/audio-volume-medium' if .25 < s1.value < .70 else 'atlas://data/images/defaulttheme/audio-volume-low' if 0 < s1.value < .30 else 'atlas://data/images/defaulttheme/audio-volume-muted'
	        Slider:
				size_hint_x: .15
	            id: s1
	            value: 1
	            range: (0,1)
	            step: .1
		# Tab drawing area
		TabArea:
			id: tabarea

<TabCanvas>

<TabArea>
	id: tabArea
	tabCanvas: tabCanvas
	slide: slide
	scrlv: scrlv
	mainBoxLayout: mainBoxLayout

	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
			id: mainBoxLayout
			orientation: 'horizontal'
			ScrollView:
				id: scrlv
				size_hint_x: 0.9
				scroll_x: (root.slider_change, root.slide)
				bar_width: 0
				do_scroll_y: False
				TabCanvas:
					id: tabCanvas
					on_touch_down: tabArea.tabTouched(args[1])
					size_hint_x: 5
		Slider:
			id: slide
			value: (root.scroll_change, root.scrlv)
			min: 0
			max: 1
			orientation: 'horizontal'
			step: 0.01
			size_hint: (1, 0.1)
			#value: scroll_change
			#on_scroll_x: slider_change()

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            path: app.curDirectory
            filters: ['*.txt']#filters so only .txt files appear.
        BoxLayout:
            size_hint_y: .15
            Button:
				#size_hint: (.5,.20)
                text: "Cancel"
                on_release: root.cancel()
            Button:
				#size_hint: (.5,.2)
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
	id: saveDialog
    text_input: fileName
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            path: app.curDirectory
            on_selection: fileName.text = self.selection and self.selection[0] or ''

        TextInput:
            id: fileName
            size_hint_y: None
            height: 100
            multiline: False

        BoxLayout:
        	size_hint_y: .15
            #size_hint_y: None
            height: 100
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Save"
                on_release: root.save(filechooser.path, fileName.text)
